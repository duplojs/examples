// Generated by @duplojs/types-codegen
/* eslint-disable */
/* prettier-ignore */
/* istanbul ignore file */
/* v8 ignore start */
// noinspection JSUnusedGlobalSymbols
// @ts-nocheck
type CodegenRoutes = ({
    method: "GET";
    path: "/lists/{listId}";
    params: {
        listId: number;
    };
    query?: {
        test?: string | undefined;
    } | undefined;
    response: {
        code: 404;
        information: "list.notfound";
        body?: undefined;
    } | {
        code: 200;
        information: "list.get";
        body: {
            id: number;
            name: string;
        };
    };
}) | ({
    method: "POST";
    path: "/lists";
    body: {
        name: string;
    };
    response: {
        code: 404;
        information: "list.alreadyUse";
        body?: undefined;
    } | {
        code: 200;
        information: "list.create";
        body: {
            id: number;
            name: string;
        };
    };
}) | ({
    method: "PATCH";
    path: "/lists/{listId}";
    body?: {
        name?: string | undefined;
    } | undefined;
    params: {
        listId: number;
    };
    response: {
        code: 404;
        information: "list.notfound";
        body?: undefined;
    } | {
        code: 201;
        information: "task.update";
        body: {
            id: number;
            name: string;
        };
    };
}) | ({
    method: "GET";
    path: "/lists";
    response: {
        code: 200;
        information: "lists.get";
        body: {
            id: number;
            name: string;
        }[];
    };
}) | ({
    method: "GET";
    path: "/tasks/{taskId}";
    params: {
        taskId: number;
    };
    response: {
        code: 404;
        information: "task.notfound";
        body?: undefined;
    } | {
        code: 200;
        information: "task.get";
        body: {
            id: number;
            listId: number;
            title: string;
            description: string;
            completed: boolean;
        };
    };
}) | ({
    method: "POST";
    path: "/lists/{listId}/tasks";
    body: {
        title: string;
        description: string;
    };
    params: {
        listId: number;
    };
    response: {
        code: 404;
        information: "list.notfound";
        body?: undefined;
    } | {
        code: 404;
        information: "task.alreadyUse";
        body?: undefined;
    } | {
        code: 201;
        information: "task.create";
        body: {
            id: number;
            listId: number;
            title: string;
            description: string;
            completed: boolean;
        };
    };
}) | ({
    method: "PATCH";
    path: "/tasks/{taskId}";
    body?: {
        title?: string | undefined;
        description?: string | undefined;
        completed?: boolean | undefined;
    } | undefined;
    params: {
        taskId: number;
    };
    response: {
        code: 404;
        information: "task.notfound";
        body?: undefined;
    } | {
        code: 404;
        information: "task.alreadyUse";
        body?: undefined;
    } | {
        code: 200;
        information: "task.update";
        body: {
            id: number;
            listId: number;
            title: string;
            description: string;
            completed: boolean;
        };
    };
}) | ({
    method: "GET";
    path: "/lists/{listId}/tasks";
    params: {
        listId: number;
    };
    response: {
        code: 404;
        information: "list.notfound";
        body?: undefined;
    } | {
        code: 200;
        information: "list.tasks.get";
        body: {
            id: number;
            listId: number;
            title: string;
            description: string;
            completed: boolean;
        }[];
    };
});

export { CodegenRoutes };
/* v8 ignore stop */
